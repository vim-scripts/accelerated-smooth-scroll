*accelerated-smooth-scroll.txt*        Vim plugin for accelerated smooth scroll.

Version    : 1.1.0
Author     : Yonchu <yuyuchu3333@gmail.com>
License    : MITLicense
Home Page  : http://yonchu.hatenablog.com/entry/2013/05/16/204727
Repository : https://github.com/yonchu/accelerated-smooth-scroll
Last Change: 11 Sep 2014.

==============================================================================
CONTENTS                                  *accelerated-smooth-scroll-contents*

Introduction                          |accelerated-smooth-scroll-introduction|
Usage                                 |accelerated-smooth-scroll-usage|
Interfaces                            |accelerated-smooth-scroll-interfaces|
  Mappings                            |accelerated-smooth-scroll-key-mappings|
  Autocmd                             |accelerated-smooth-scroll-autocmd|
Settings                              |accelerated-smooth-scroll-settings|
  Variables                           |accelerated-smooth-scroll-variables|
  Functions                           |accelerated-smooth-scroll-functions|
Changelog                             |accelerated-smooth-scroll-changelog|

==============================================================================
INTRODUCTION                          *accelerated-smooth-scroll-introduction*

The *accelerated-smooth-scroll* plugin makes scrolling with a smooth animation in Vim.
Moreover, the scroll speed will be accelerated, if you consecutively scroll.

`<C-D>/<C-U>` and `<C-F>/<C-B>` keys are replaced by default.

==============================================================================
USAGE                                        *accelerated-smooth-scroll-usage*

Example: >

    The following mappings by default:

    nmap <silent> <C-d> <Plug>(ac-smooth-scroll-c-d)
    nmap <silent> <C-u> <Plug>(ac-smooth-scroll-c-u)
    nmap <silent> <C-f> <Plug>(ac-smooth-scroll-c-f)
    nmap <silent> <C-b> <Plug>(ac-smooth-scroll-c-b)
<

==============================================================================
INTERFACES                              *accelerated-smooth-scroll-interfaces*

------------------------------------------------------------------------------
MAPPINGS                              *accelerated-smooth-scroll-key-mappings*

<Plug>(ac-smooth-scroll-c-d)                     *<Plug>(ac-smooth-scroll-c-d)*
    Scroll up half-page like |<C-d>| key.

<Plug>(ac-smooth-scroll-c-u)                     *<Plug>(ac-smooth-scroll-c-u)*
    Scroll down half-page like |<C-u>| key.

<Plug>(ac-smooth-scroll-c-f)                     *<Plug>(ac-smooth-scroll-c-f)*
    Scroll up a page like |<C-f>| key.

<Plug>(ac-smooth-scroll-c-b)                     *<Plug>(ac-smooth-scroll-c-b)*
    Scroll down a page like |<C-b>| key.

<Plug>(ac-smooth-scroll-c-d_v)                 *<Plug>(ac-smooth-scroll-c-d_v)*
    Scroll up half-page like |<C-d>| key for Visual mode.

<Plug>(ac-smooth-scroll-c-u_v)                 *<Plug>(ac-smooth-scroll-c-u_v)*
    Scroll down half-page like |<C-u>| key for Visual mode.

<Plug>(ac-smooth-scroll-c-f_v)                 *<Plug>(ac-smooth-scroll-c-f_v)*
    Scroll up a page like |<C-f>| key for Visual mode.

<Plug>(ac-smooth-scroll-c-b_v)                 *<Plug>(ac-smooth-scroll-c-b_v)*
    Scroll down a page like |<C-b>| key for Visual mode.

------------------------------------------------------------------------------
AUTOCMD                                     *accelerated-smooth-scroll-autocmd*

The following autocmd events are defined.
You can use events to execute automatically any commands when entering and leaving scrolling.

AcSmoothScrollEnter                                       *AcSmoothScrollEnter*
   Run before enter scrolling.

AcSmoothScrollLeave                                       *AcSmoothScrollLeave*
   Run after leave scrolling.

Example: >
    augroup Example
        autocmd!
        " Turn off myusuf3/numbers.vim while smooth scroll running.
        autocmd User AcSmoothScrollEnter NumbersToggle
        autocmd User AcSmoothScrollLeave NumbersToggle
    augroup END
<

==============================================================================
SETTINGS                                   *accelerated-smooth-scroll-setting*

------------------------------------------------------------------------------
VARIABLES                                *accelerated-smooth-scroll-variables*

g:ac_smooth_scroll_no_default_key_mappings    *g:ac_smooth_scroll_no_default_key_mappings*
    Disable all default key mappings.
    (Default: 0)

g:ac_smooth_scroll_visualmode_key_mappings    *g:ac_smooth_scroll_visualmode_key_mappings*
    Enable key mappings for Visual mode.
    (Default: 1)
    Note that if you want to fix cursor, you need to set "|set| |lazyredraw|"
    in your .vimrc configuration file.

g:ac_smooth_scroll_enable_accelerating        *g:ac_smooth_scroll_enable_accelerating*
    Enable accelerating scroll.
    (Default: 1)

g:ac_smooth_scroll_disable_relativenumber     *g:ac_smooth_scroll_disable_relativenumber*
    Disable |relativenumber| while scrolling.
    (Default: 1)

g:ac_smooth_scroll_du_sleep_time_msec         *g:ac_smooth_scroll_du_sleep_time_msec*
    Sleep time (msec) when first scrolling half-page.
    (Default: 10)

g:ac_smooth_scroll_fb_sleep_time_msec         *g:ac_smooth_scroll_fb_sleep_time_msec*
    Sleep time (msec) when first scrolling a page.
    (Default: 10)

g:ac_smooth_scroll_min_limit_msec             *g:ac_smooth_scroll_min_limit_msec*
    Minimum time (msec) to detect consecutive scrolling.
    Key input is ingore if triggered within this value.
    (Default: 50)

    If this plugin is used in an environment with slow redering speed,
    you should make this value higher.

    Example: >
        let g:ac_smooth_scroll_min_limit_msec = 80
    <

g:ac_smooth_scroll_max_limit_msec              *g:ac_smooth_scroll_max_limit_msec*
    Maximum time (msec) to detect consecutively scroll.
    (Default: 300)

------------------------------------------------------------------------------
FUNCTIONS                                 *accelerated-smooth-scroll-functions*

You can use the following functions to change scroll acceleration.
Note that the specifications of these functions may change in the future.

AcSmoothScrollCalcStep(key_count, wlcount)                       *AcSmoothScrollCalcStep*
    Calculate the step count.

    key_count : Input key count (<C-d>/<C-u> or <C-F>/<C-B>)
    wlcount   : Total line count to move (half page or a page line count)

AcSmoothScrollCalcSleepTimeMsec(key_count, sleep_time_msec)    *AcSmoothScrollCalcSleepTimeMsec*
    Calculate the sleep time.

    key_count       : Input key count (<C-d>/<C-u> or <C-F>/<C-B>)
    sleep_time_msec : Initial value of sleep time (msec)

==============================================================================
CHANGELOG                                 *accelerated-smooth-scroll-changelog*

1.1.0   2014-09-11
        - Disable (and restore after scroll) relative line numbers to improve performance
        - Add ac_smooth_scroll_disable_relativenumber option (default: 1)
        - Bugfix
          - Rename functions not to use global function like g:hogehoge
          - Use setlocal instead of set to save and restore settings

1.0.1   2013-06-30
        - Fix executing doautocmd for old version of Vim

1.0.0   2013-06-30
        - Release ver.1.0.0

==============================================================================
vim:tw=78:fo=tcq2mM:ts=8:ft=help:norl
